- job:
    name: 'lighthouse-build-pullrequests'
    description: 'Do not edit this job through the web!'
    display-name: 'Build Lighthouse PRs'
{% if distribute_dependencies %}
    workspace: /opt/dist/workspaces/lighthouse-build-pullrequests
{% else %}
    scm:
        - git:
            url: {{ lighthouse_repo }}
            branches:
                - {{ lighthouse_version }}
            choosing-strategy: inverse
{% endif %}
    triggers:
        - github
    builders:
{% if notify_github %}
        - github-notifier
{% endif %}
        - shell: |
            export VIRTUALENV_LOCATION="$WORKSPACE/virtualenv"
            export DOWNLOAD_LOCATION="{{ jenkins_pypi_dist_location }}"
            export INTERNET_ACCESS="{{ lighthouse_internet_access }}"
            $WORKSPACE/bin/jenkins.sh
    wrappers:
        - ansicolor
{% if notify_github %}
    publishers:
        - github-notifier
{% endif %}

- job:
    name: 'lighthouse-build'
    description: 'Do not edit this job through the web!'
    display-name: 'Build Lighthouse'
{% if distribute_dependencies %}
    workspace: /opt/dist/workspaces/lighthouse-build
{% else %}
    scm:
        - git:
            url:  {{ lighthouse_repo }}
            branches:
                - {{ lighthouse_version }}
{% endif %}
    triggers:
        - github
    builders:
{% if notify_github %}
        - github-notifier
{% endif %}
        - shell: |
            export VIRTUALENV_LOCATION="$WORKSPACE/virtualenv"
            export DOWNLOAD_LOCATION="{{ jenkins_pypi_dist_location }}"
            export INTERNET_ACCESS="{{ lighthouse_internet_access }}"
            $WORKSPACE/bin/jenkins.sh
    wrappers:
        - ansicolor
{% if notify_github %}
    publishers:
        - github-notifier
{% endif %}

- job:
    name: 'lighthouse-deploy'
    description: 'Do not edit this job through the web!'
    display-name: 'Deploy Lighthouse'
{% if distribute_dependencies %}
    workspace: /opt/dist/workspaces/lighthouse-deploy
{% else %}
    scm:
        - git:
            url: {{ builder_repo }}
            branches:
                - {{ builder_version }}
            submodule:
                recursive: true
{% endif %}
    triggers:
        - github
        - reverse:
            jobs: 'lighthouse-build'
            result: 'success'
    builders:
        - shell: |
            export ANSIBLE_HOST_KEY_CHECKING=False
            chmod 'u=rw,g=,o=' secrets/preview.deploy.pem
            cd ansible
            ansible-playbook -i {{ lighthouse_inventory_file }} $WORKSPACE/ansible/playbook.yml
    wrappers:
        - ansicolor

- job:
    name: 'lighthouse-acceptance-test'
    description: 'Do not edit this job through the web!'
    display-name: 'Acceptance Test Lighthouse'
{% if distribute_dependencies %}
    workspace: /opt/dist/workspaces/lighthouse-acceptance-test
{% else %}
    scm:
        - git:
            url: {{ lighthouse_repo }}
            branches:
                - {{ lighthouse_version }}
{% endif %}
    triggers:
        - reverse:
            jobs: 'lighthouse-deploy'
            result: 'success'
    builders:
        - shell: |
            export PATH="/usr/local/bin:$PATH"
            export LIGHTHOUSE_HOST="{{ lighthouse_host }}"
            export DOWNLOAD_LOCATION="{{ jenkins_pypi_dist_location }}"
            export INTERNET_ACCESS="{{ lighthouse_internet_access }}"
            $WORKSPACE/bin/acceptance-test.sh
    wrappers:
        - ansicolor


- project:
    name: lighthouse
    jobs:
        - 'lighthouse-build'
        - 'lighthouse-build-pullrequests'
        - 'lighthouse-deploy'
